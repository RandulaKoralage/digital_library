/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.dl.client.view;

import com.ijse.dl.client.controllerfactoryimpl.ControllerFactoryImpl;
import com.ijse.dl.common.dto.Access;
import com.ijse.dl.common.dto.Book;
import com.ijse.dl.common.dto.Download;
import com.ijse.dl.common.dto.Log;
import com.ijse.dl.common.dto.User;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Randula
 */
public class HistoryFrame extends javax.swing.JFrame {

    /**
     * Creates new form HistoryFrame
     */
    private final Icon icon = new ImageIcon(getClass().getResource(
            "/com/ijse/dl/client/view/images/block.png"));
    private HomeFrame homeFrame;
    private String id;
    private int posX;
    private int posY;

    public HistoryFrame() {
        initComponents();
        setFullScreen();
        getTime();
    }

    HistoryFrame(HomeFrame homeFrame) {
        try {
            initComponents();
            setFullScreen();
            getTime();
            this.homeFrame = homeFrame;
            this.id = homeFrame.getId();

            loadAccessTable();
            fillTextFields();
            fillDownloadTable();
        } catch (IOException | NotBoundException | ParseException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbDate = new org.jdesktop.swingx.JXDatePicker();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        lblLogin = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        txtLogOut = new javax.swing.JTextField();
        lblLogOut = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        downloadTable = new javax.swing.JTable();
        lblLastlogin = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        lblRecentDonload = new javax.swing.JLabel();
        lblLastDate = new javax.swing.JLabel();
        lblClock = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblBackground1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDateActionPerformed(evt);
            }
        });
        getContentPane().add(cmbDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 240, 30));

        jScrollPane1.setOpaque(false);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "mCode", "Name", "Author", "Subject", "Media Type", "Acees Time"
            }
        ));
        table.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(50);
            table.getColumnModel().getColumn(0).setPreferredWidth(50);
            table.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 640, 400));

        lblLogin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblLogin.setForeground(new java.awt.Color(255, 255, 255));
        lblLogin.setText("Log In");
        getContentPane().add(lblLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 200, 90, 30));

        txtLogin.setEditable(false);
        txtLogin.setBackground(new java.awt.Color(255, 255, 255));
        txtLogin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtLogin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        getContentPane().add(txtLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 200, 270, 30));

        txtLogOut.setEditable(false);
        txtLogOut.setBackground(new java.awt.Color(255, 255, 255));
        txtLogOut.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtLogOut.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        getContentPane().add(txtLogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 240, 270, 30));

        lblLogOut.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblLogOut.setForeground(new java.awt.Color(255, 255, 255));
        lblLogOut.setText("Log Out");
        getContentPane().add(lblLogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 240, 90, 30));

        lblTotal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblTotal.setForeground(new java.awt.Color(255, 255, 255));
        lblTotal.setText("Total Time");
        getContentPane().add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 280, 90, 30));

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        getContentPane().add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 280, 270, 30));

        downloadTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "mCode", "Name", "Subject", "Media type", "Date", "Time"
            }
        ));
        downloadTable.setFillsViewportHeight(true);
        jScrollPane2.setViewportView(downloadTable);
        if (downloadTable.getColumnModel().getColumnCount() > 0) {
            downloadTable.getColumnModel().getColumn(0).setMinWidth(50);
            downloadTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            downloadTable.getColumnModel().getColumn(0).setMaxWidth(50);
            downloadTable.getColumnModel().getColumn(1).setPreferredWidth(100);
            downloadTable.getColumnModel().getColumn(3).setMinWidth(75);
            downloadTable.getColumnModel().getColumn(3).setPreferredWidth(75);
            downloadTable.getColumnModel().getColumn(3).setMaxWidth(75);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 360, 540, 230));

        lblLastlogin.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblLastlogin.setForeground(new java.awt.Color(255, 255, 255));
        lblLastlogin.setText("Last Log In...");
        getContentPane().add(lblLastlogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 160, 180, 30));

        btnHome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/home1.png"))); // NOI18N
        btnHome.setText("Back");
        btnHome.setContentAreaFilled(false);
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
        });
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 600, 110, 90));

        lblRecentDonload.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblRecentDonload.setForeground(new java.awt.Color(255, 255, 255));
        lblRecentDonload.setText("Recent Downloads...");
        getContentPane().add(lblRecentDonload, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 330, 180, 30));

        lblLastDate.setFont(new java.awt.Font("Tempus Sans ITC", 0, 14)); // NOI18N
        lblLastDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblLastDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 160, 270, 30));

        lblClock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblClock.setForeground(new java.awt.Color(255, 255, 255));
        lblClock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblClock.setText("Time");
        getContentPane().add(lblClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 70, 100, 20));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1370, 10));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/minimize.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 0, 40, 50));

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/close2.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
        });
        getContentPane().add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, 40, 50));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("History");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 70, 20));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MAZE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 110, 50));

        lblBackground1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblBackground1.setForeground(new java.awt.Color(255, 255, 255));
        lblBackground1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/back.jpg"))); // NOI18N
        lblBackground1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblBackground1.setMaximumSize(new java.awt.Dimension(1368, 766));
        lblBackground1.setMinimumSize(new java.awt.Dimension(1368, 766));
        lblBackground1.setPreferredSize(new java.awt.Dimension(1368, 766));
        getContentPane().add(lblBackground1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -480, 1690, 1320));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        btnHome.setIcon(new ImageIcon(getClass().
                getResource("/com/ijse/dl/client/view/images/home2.png")));
    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        btnHome.setIcon(new ImageIcon(getClass().
                getResource("/com/ijse/dl/client/view/images/home1.png")));
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void cmbDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDateActionPerformed
        try {
            loadAccessTable();
            fillTextFields();
        } catch (IOException | NotBoundException | ParseException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_cmbDateActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblCloseMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistoryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HistoryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private org.jdesktop.swingx.JXDatePicker cmbDate;
    private javax.swing.JTable downloadTable;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBackground1;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblLastDate;
    private javax.swing.JLabel lblLastlogin;
    private javax.swing.JLabel lblLogOut;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblRecentDonload;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtLogOut;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void loadAccessTable()
            throws IOException, RemoteException, NotBoundException {

        Date date = cmbDate.getDate();
        SimpleDateFormat simpledateformat
                = (SimpleDateFormat) DateFormat
                .getDateInstance(DateFormat.LONG);
        String curDate = simpledateformat.format(date);

        ArrayList<Access> list
                = new ControllerFactoryImpl().getAccessController()
                .viewAccessOfADay(id, curDate);
        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);

        for (Access access : list) {
            Book book
                    = new ControllerFactoryImpl().getBookController().
                    searchBook(access.getmCode());
            if (book != null) {
                Object[] rows = {book.getmCode(), book.getName(),
                    book.getAuthor(), book.getSubject(), book.getType(),
                    access.getViewedTime()};
                dtm.addRow(rows);
            }
        }
    }

    private void fillTextFields()
            throws IOException, RemoteException,
            NotBoundException, ParseException {

        Date date = cmbDate.getDate();
        SimpleDateFormat simpledateformat
                = (SimpleDateFormat) DateFormat
                .getDateInstance(DateFormat.LONG);
        String curDate = simpledateformat.format(date);
        ArrayList<Log> list
                = new ControllerFactoryImpl().getLogController()
                .searchLog(id, curDate);

        if (list.size() > 0) {
            Collections.sort(list);
            Log log = list.get(list.size() - 1);
            if (log != null) {
                lblLastDate.setText(log.getCurDate());
                txtLogOut.setText(log.getLogOutTime());
                txtLogin.setText(log.getLogInTime());

                String time1 = log.getLogInTime();
                String time2 = log.getLogOutTime();

                SimpleDateFormat format = new SimpleDateFormat("HH:mm:ss");
                Date date1 = format.parse(time1);
                Date date2 = format.parse(time2);
                long difference = date2.getTime() - date1.getTime();

                long millis = difference;
                String hms = convertTime(millis);

                txtTotal.setText(hms);

            }
        }
    }

    private String convertTime(long millis) {
        String hms = String.format("%02d:%02d:%02d",
                TimeUnit.MILLISECONDS.toHours(millis),
                TimeUnit.MILLISECONDS
                .toMinutes(millis) - TimeUnit.HOURS
                .toMinutes(TimeUnit.MILLISECONDS
                        .toHours(millis)),
                TimeUnit.MILLISECONDS
                .toSeconds(millis) - TimeUnit.MINUTES
                .toSeconds(TimeUnit.MILLISECONDS
                        .toMinutes(millis)));
        return hms;
    }

    private void fillDownloadTable()
            throws IOException, RemoteException, NotBoundException {

        ArrayList<Download> list = new ControllerFactoryImpl()
                .getDownloadController().viewRecentDownloads(id);
        DefaultTableModel dtm = (DefaultTableModel) downloadTable.getModel();
        dtm.setRowCount(0);

        for (Download download : list) {
            Book book
                    = new ControllerFactoryImpl().getBookController().
                    searchBook(download.getmCode());
            Object[] rows
                    = {download.getmCode(), book.getName(),
                        book.getSubject(), book.getType(),
                        download.getDownloadDate(), download.getDownloadTime()};
            dtm.addRow(rows);
        }
    }

    private void setFullScreen() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize.width, screenSize.height);

        Component component = this;
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                posX = e.getX();
                posY = e.getY();
            }
        });

        component.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent evt) {
                Rectangle rectangle = getBounds();
                setBounds(evt.getXOnScreen() - posX, evt.getYOnScreen() - posY,
                        rectangle.width, rectangle.height);
            }
        });
    }

    /**
     * Sets current time.
     */
    private void getTime() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date curDate = new Date();
                    SimpleDateFormat dateFormat
                            = new SimpleDateFormat("HH:mm aa");
                    String currentTime = dateFormat.format(curDate);

                    lblClock.setText(currentTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(
                                HistoryFrame.this, "Database Error...");
                    }
                }
            }
        }).start();
    }
}
