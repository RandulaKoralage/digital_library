/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.dl.client.view;

import com.ijse.dl.client.controllerfactoryimpl.ControllerFactoryImpl;
import com.ijse.dl.client.view.util.Validation;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Randula
 */
public class LogInPanel extends javax.swing.JPanel {

    /**
     * Creates new form LogInPanel
     */
    private LoginFrame loginFrame;  // Refer Login Frame Object
    private Icon icon = new ImageIcon(getClass().getResource(
            "/com/ijse/dl/client/view/images/block.png"));

    public LogInPanel() {
        initComponents();
    }

    /**
     * Creates new form LogInPanel
     *
     * @param loginFrame LoginFrame reference
     */
    LogInPanel(LoginFrame loginFrame) {
        initComponents();
        if (this.loginFrame == null) {
            this.loginFrame = loginFrame;
        }
        lblError.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        group = new javax.swing.ButtonGroup();
        lblUserId = new javax.swing.JLabel();
        txtUserId = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        pssPassword = new javax.swing.JPasswordField();
        btnMember = new javax.swing.JRadioButton();
        btnAdmin = new javax.swing.JRadioButton();
        lblLogInBtn = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblError = new javax.swing.JLabel();

        setForeground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        lblUserId.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblUserId.setForeground(new java.awt.Color(255, 255, 255));
        lblUserId.setText("User Id");

        txtUserId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtUserId.setForeground(new java.awt.Color(204, 255, 255));
        txtUserId.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        txtUserId.setOpaque(false);
        txtUserId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIdActionPerformed(evt);
            }
        });
        txtUserId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUserIdKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserIdKeyTyped(evt);
            }
        });

        lblPassword.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 255, 255));
        lblPassword.setText("Password");

        pssPassword.setForeground(new java.awt.Color(204, 255, 255));
        pssPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        pssPassword.setOpaque(false);
        pssPassword.setPreferredSize(new java.awt.Dimension(72, 23));
        pssPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pssPasswordActionPerformed(evt);
            }
        });

        group.add(btnMember);
        btnMember.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnMember.setForeground(new java.awt.Color(255, 255, 255));
        btnMember.setSelected(true);
        btnMember.setText("Library Member");
        btnMember.setOpaque(false);
        btnMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemberActionPerformed(evt);
            }
        });
        btnMember.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnMemberKeyPressed(evt);
            }
        });

        group.add(btnAdmin);
        btnAdmin.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnAdmin.setForeground(new java.awt.Color(255, 255, 255));
        btnAdmin.setText("Administrator");
        btnAdmin.setOpaque(false);
        btnAdmin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdminKeyPressed(evt);
            }
        });

        lblLogInBtn.setBackground(new java.awt.Color(29, 78, 217));
        lblLogInBtn.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        lblLogInBtn.setForeground(new java.awt.Color(255, 255, 255));
        lblLogInBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogInBtn.setText("LOGIN");
        lblLogInBtn.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        lblLogInBtn.setOpaque(true);
        lblLogInBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLogInBtnMouseClicked(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblError.setForeground(new java.awt.Color(255, 102, 102));
        lblError.setText("Password Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtUserId)
                                .addComponent(pssPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMember, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(lblLogInBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pssPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMember)
                    .addComponent(btnAdmin))
                .addGap(29, 29, 29)
                .addComponent(lblLogInBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserIdActionPerformed
        pssPassword.requestFocusInWindow();
    }//GEN-LAST:event_txtUserIdActionPerformed

    private void lblLogInBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLogInBtnMouseClicked
        logIn();
    }//GEN-LAST:event_lblLogInBtnMouseClicked

    private void txtUserIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserIdKeyTyped

    }//GEN-LAST:event_txtUserIdKeyTyped

    private void txtUserIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserIdKeyReleased
        Validation.numberOnly(txtUserId);
    }//GEN-LAST:event_txtUserIdKeyReleased

    private void pssPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pssPasswordActionPerformed
        btnMember.requestFocusInWindow();
        btnMember.setSelected(true);
    }//GEN-LAST:event_pssPasswordActionPerformed

    private void btnMemberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnMemberKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            btnAdmin.setSelected(true);
        }
    }//GEN-LAST:event_btnMemberKeyPressed

    private void btnAdminKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdminKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            btnMember.setSelected(true);
        }
    }//GEN-LAST:event_btnAdminKeyPressed

    private void btnMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemberActionPerformed
        logIn();
    }//GEN-LAST:event_btnMemberActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnAdmin;
    private javax.swing.JRadioButton btnMember;
    private javax.swing.ButtonGroup group;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblLogInBtn;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUserId;
    private javax.swing.JPasswordField pssPassword;
    private javax.swing.JTextField txtUserId;
    // End of variables declaration//GEN-END:variables

    private boolean checkValidity(String type)
            throws IOException, RemoteException, NotBoundException {

        String userId = txtUserId.getText();
        String passwaord = String.valueOf(pssPassword.getPassword());
        boolean isAvailable
                = new ControllerFactoryImpl().getMemberController()
                .isAvailabele(userId, passwaord, type);

        return isAvailable;
    }

    private void logIn() {
        try {
            String type = null;
            if (btnAdmin.isSelected()) {
                type = "Admin";

            } else {
                type = "User";

            }

            boolean isValid = checkValidity(type);

            if (isValid && btnAdmin.isSelected()) {
                AdminHomeFrame adminHomeFrame
                        = new AdminHomeFrame(txtUserId.getText());
                adminHomeFrame.setVisible(true);
                loginFrame.dispose();
            } else if (isValid && btnMember.isSelected()) {
                HomeFrame homeFrame = new HomeFrame(txtUserId.getText());
                homeFrame.setVisible(true);
                loginFrame.dispose();
            } else {
                lblError.setText("Please Check Your Password Again..");
                lblError.setVisible(true);
                txtUserId.setText(null);
                lblUserId.setForeground(new java.awt.Color(255, 51, 51));
                pssPassword.setText(null);
                lblPassword.setForeground(new java.awt.Color(255, 51, 51));
            }

        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }
}
