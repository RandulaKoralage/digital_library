/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.dl.client.view;

import com.ijse.dl.client.connector.ServerConnector;
import com.ijse.dl.client.controllerfactoryimpl.ControllerFactoryImpl;
import com.ijse.dl.client.observerimpl.BookObserverImpl;
import com.ijse.dl.client.view.util.Pop;
import com.ijse.dl.common.dto.Book;
import com.ijse.dl.common.service.SubjectService;
import com.ijse.dl.common.dto.Subject;
import com.ijse.dl.common.observer.BookObserver;
import com.ijse.dl.common.util.TransportableImage;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Randula
 */
public class CatalogForm extends javax.swing.JFrame {

    private Icon icon = new ImageIcon(getClass().getResource(
            "/com/ijse/dl/client/view/images/block.png"));
    private ArrayList<Book> bookList;
    private ArrayList<JLabel> labelList = new ArrayList<>();
    private ArrayList<JLabel> lastLabelList = new ArrayList<>();
    private BookObserver bookObserver;
    private HomeFrame homeFrame;
    private PreviewForm previewForm;
    private String id;
    private int posX;
    private int posY;
    private int point = 0;

    /**
     * Creates new form CatalogForm
     */
    public CatalogForm() {
        initComponents();
        getTime();
    }

    CatalogForm(HomeFrame homeFrame) {
        try {

            this.homeFrame = homeFrame;
            initComponents();
            setFullScreen();
            getTime();
            bookObserver = new BookObserverImpl(this);
            new ControllerFactoryImpl().getBookController()
                    .addBookObserver(bookObserver);
            this.id = homeFrame.getId();
            getAllSubjects();

        } catch (RemoteException ex) {
            System.err.println(ex.getMessage());
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    public String getId() {
        return id;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnHome = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listSubject = new javax.swing.JList();
        jXTitledPanel2 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listType = new javax.swing.JList();
        lblImg2 = new javax.swing.JLabel();
        lblImg3 = new javax.swing.JLabel();
        lblImg4 = new javax.swing.JLabel();
        lblImg5 = new javax.swing.JLabel();
        lblImg6 = new javax.swing.JLabel();
        lblImg1 = new javax.swing.JLabel();
        lblImg7 = new javax.swing.JLabel();
        lblImg8 = new javax.swing.JLabel();
        lblImg9 = new javax.swing.JLabel();
        lblImg10 = new javax.swing.JLabel();
        lblCount = new javax.swing.JLabel();
        lblRight = new javax.swing.JLabel();
        lblLeft = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        txtBookName = new javax.swing.JTextField();
        lblClose = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblClock = new javax.swing.JLabel();
        lblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnHome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/home1.png"))); // NOI18N
        btnHome.setText("Home");
        btnHome.setContentAreaFilled(false);
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
        });
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 570, 110, 90));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/refresh1.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setContentAreaFilled(false);
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchMouseExited(evt);
            }
        });
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 110, 90));

        jXTitledPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jXTitledPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jXTitledPanel1.setTitle("Subject");
        jXTitledPanel1.setTitleFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jXTitledPanel1.setTitleForeground(new java.awt.Color(255, 255, 255));

        listSubject.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        listSubject.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Java", "Database", "Science", "History", "Environment", "English", "Stories", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listSubject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listSubject.setSelectionBackground(new java.awt.Color(153, 204, 255));
        listSubject.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(listSubject);

        javax.swing.GroupLayout jXTitledPanel1Layout = new javax.swing.GroupLayout(jXTitledPanel1.getContentContainer());
        jXTitledPanel1.getContentContainer().setLayout(jXTitledPanel1Layout);
        jXTitledPanel1Layout.setHorizontalGroup(
            jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jXTitledPanel1Layout.setVerticalGroup(
            jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 195, Short.MAX_VALUE)
            .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        getContentPane().add(jXTitledPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 220, -1));

        jXTitledPanel2.setTitle("Media Type");
        jXTitledPanel2.setTitleFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jXTitledPanel2.setTitleForeground(new java.awt.Color(255, 255, 255));

        listType.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        listType.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "All", "PDF", "Image", "Audio", "Video", "" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listType.setSelectionBackground(new java.awt.Color(153, 204, 255));
        listType.setSelectionForeground(new java.awt.Color(0, 0, 0));
        listType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTypeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                listTypeMouseEntered(evt);
            }
        });
        jScrollPane2.setViewportView(listType);

        javax.swing.GroupLayout jXTitledPanel2Layout = new javax.swing.GroupLayout(jXTitledPanel2.getContentContainer());
        jXTitledPanel2.getContentContainer().setLayout(jXTitledPanel2Layout);
        jXTitledPanel2Layout.setHorizontalGroup(
            jXTitledPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXTitledPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addContainerGap())
        );
        jXTitledPanel2Layout.setVerticalGroup(
            jXTitledPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTitledPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jXTitledPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 220, 200));

        lblImg2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg2.setText("0");
        lblImg2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg2MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 180, 130, 160));

        lblImg3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg3.setText("0");
        lblImg3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg3MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 180, 130, 160));

        lblImg4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg4.setText("0");
        lblImg4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg4MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg4, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 180, 130, 160));

        lblImg5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg5.setText("0");
        lblImg5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg5MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 180, 130, 160));

        lblImg6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg6.setText("0");
        lblImg6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg6MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 370, 130, 160));

        lblImg1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg1.setText("0");
        lblImg1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg1MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 130, 160));

        lblImg7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg7.setText("0");
        lblImg7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg7MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 370, 130, 160));

        lblImg8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg8.setText("0");
        lblImg8.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg8MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg8, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 370, 130, 160));

        lblImg9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg9.setText("0");
        lblImg9.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg9.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg9MouseClicked(evt);
            }
        });
        getContentPane().add(lblImg9, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 370, 130, 160));

        lblImg10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImg10.setText("0");
        lblImg10.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblImg10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblImg10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImg10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblImg10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lblImg10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblImg10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblImg10MouseEntered(evt);
            }
        });
        getContentPane().add(lblImg10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 370, 130, 160));

        lblCount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCount.setText("0 Result Found..");
        getContentPane().add(lblCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 590, 130, 40));

        lblRight.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRight.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/left.png"))); // NOI18N
        lblRight.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRightMouseClicked(evt);
            }
        });
        getContentPane().add(lblRight, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 590, 30, 40));

        lblLeft.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLeft.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/right.png"))); // NOI18N
        lblLeft.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblLeftMouseClicked(evt);
            }
        });
        getContentPane().add(lblLeft, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 590, 30, 40));

        txtAuthor.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        txtAuthor.setText("Search By Author");
        txtAuthor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAuthorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAuthorFocusLost(evt);
            }
        });
        txtAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAuthorActionPerformed(evt);
            }
        });
        txtAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAuthorKeyReleased(evt);
            }
        });
        getContentPane().add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 140, 290, 30));

        txtBookName.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        txtBookName.setText("Search By Name");
        txtBookName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBookNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBookNameFocusLost(evt);
            }
        });
        txtBookName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookNameActionPerformed(evt);
            }
        });
        txtBookName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBookNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtBookName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, 290, 30));

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/close2.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
        });
        getContentPane().add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, 40, 50));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/minimize.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 0, 40, 50));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Catalog");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 70, 20));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MAZE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 110, 50));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1370, 10));

        lblClock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblClock.setForeground(new java.awt.Color(255, 255, 255));
        lblClock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblClock.setText("Time");
        getContentPane().add(lblClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 70, 100, 20));

        lblBackground.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblBackground.setForeground(new java.awt.Color(255, 255, 255));
        lblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/back.jpg"))); // NOI18N
        lblBackground.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(lblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(-140, -420, 1681, 1330));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        btnHome.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/com/ijse/dl/client/view/images/home1.png")));
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        btnHome.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/com/ijse/dl/client/view/images/home2.png")));
    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseExited
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/com/ijse/dl/client/view/images/refresh1.png")));
    }//GEN-LAST:event_btnSearchMouseExited

    private void btnSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseEntered
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/com/ijse/dl/client/view/images/refresh2.png")));
    }//GEN-LAST:event_btnSearchMouseEntered

    private void lblImg1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg1MouseClicked
        preview(lblImg1);
    }//GEN-LAST:event_lblImg1MouseClicked

    private void lblImg2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg2MouseClicked
        preview(lblImg2);
    }//GEN-LAST:event_lblImg2MouseClicked

    private void lblImg3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg3MouseClicked
        preview(lblImg3);
    }//GEN-LAST:event_lblImg3MouseClicked

    private void lblImg4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg4MouseClicked
        preview(lblImg4);
    }//GEN-LAST:event_lblImg4MouseClicked

    private void lblImg5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg5MouseClicked
        preview(lblImg5);
    }//GEN-LAST:event_lblImg5MouseClicked

    private void lblImg6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg6MouseClicked
        preview(lblImg6);
    }//GEN-LAST:event_lblImg6MouseClicked

    private void lblImg7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg7MouseClicked
        preview(lblImg7);
    }//GEN-LAST:event_lblImg7MouseClicked

    private void lblImg8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg8MouseClicked
        preview(lblImg8);
    }//GEN-LAST:event_lblImg8MouseClicked

    private void lblImg9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg9MouseClicked
        preview(lblImg9);
    }//GEN-LAST:event_lblImg9MouseClicked

    private void lblImg10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg10MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lblImg10MouseEntered

    private void lblImg10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImg10MouseClicked
        preview(lblImg10);
    }//GEN-LAST:event_lblImg10MouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (!(listSubject.isSelectionEmpty() && listType.isSelectionEmpty())) {
            try {
                String subject = (String) listSubject.getSelectedValue();
                String type = (String) listType.getSelectedValue();

                ArrayList<Book> bookList = null;

                if ("All".equalsIgnoreCase(type)) {
                    bookList = getBookListForAllTypes(subject);
                } else {
                    bookList = getBookListForGivenType(subject, type);
                }

                lblCount.setText(bookList.size() + " Results Found");

                addBookListToLabels(bookList);
            } catch (IOException | NotBoundException ex) {
                JOptionPane.showMessageDialog(null, "Server Disconnected",
                        "Oops!",
                        JOptionPane.INFORMATION_MESSAGE, icon);
            }
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please Select a Subject...", "Warning..",
                    JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAuthorActionPerformed
        try {
            String author = txtAuthor.getText();
            ArrayList<Book> bookList = searchByAuthor(author);
            addBookListToLabels(bookList);
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_txtAuthorActionPerformed

    private void txtBookNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookNameActionPerformed
        try {
            String name = txtBookName.getText();
            ArrayList<Book> bookList = searchByName(name);
            addBookListToLabels(bookList);
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_txtBookNameActionPerformed

    private void txtBookNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBookNameKeyReleased
        try {
            String name = txtBookName.getText();
            ArrayList<Book> bookList = searchByName(name);
            addBookListToLabels(bookList);
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_txtBookNameKeyReleased

    private void txtBookNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBookNameFocusGained
        txtBookName.setFont(new java.awt.Font("Tahoma", 0, 11));
        txtBookName.setText(null);
    }//GEN-LAST:event_txtBookNameFocusGained

    private void txtBookNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBookNameFocusLost
        txtBookName.setFont(new java.awt.Font("Tahoma", 2, 11));
        txtBookName.setText("Search By Name");
    }//GEN-LAST:event_txtBookNameFocusLost

    private void txtAuthorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAuthorFocusGained
        txtAuthor.setFont(new java.awt.Font("Tahoma", 0, 11));
        txtAuthor.setText(null);
    }//GEN-LAST:event_txtAuthorFocusGained

    private void txtAuthorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAuthorFocusLost
        txtAuthor.setFont(new java.awt.Font("Tahoma", 2, 11));
        txtAuthor.setText("Search By Author");
    }//GEN-LAST:event_txtAuthorFocusLost

    private void txtAuthorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAuthorKeyReleased
        try {
            String author = txtAuthor.getText();
            ArrayList<Book> bookList = searchByAuthor(author);
            addBookListToLabels(bookList);
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_txtAuthorKeyReleased

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {

            new ControllerFactoryImpl().getBookController()
                    .removeBookObserver(bookObserver);

        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_formWindowClosing

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        deleteTemp();
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblCloseMouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void listTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTypeMouseClicked
        if (listSubject.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Please Select a Subject...", "Warning..",
                    JOptionPane.WARNING_MESSAGE);
            if (listSubject.getVisibleRowCount() != 0) {
                listSubject.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_listTypeMouseClicked

    private void listTypeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTypeMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_listTypeMouseEntered

    private void lblLeftMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblLeftMouseClicked
        if (lblLeft.isEnabled()) {

            int pointer = 0;
            int count = 0;
            if (this.bookList.size() > pointer) {
                for (JLabel label : labelList) {
                    label.setIcon(null);
                    label.setText("..");
                }

                for (Book book : bookList) {
                    if (count <= point - 1) {
                        count++;
                    } else {
                        if (pointer <= 10) {

                            try {
                                byte[] imageBytes = book.getImage();
                                BufferedImage currentImage = createCover(imageBytes);
                                BufferedImage image = resizeImage(currentImage);
                                labelList.get(pointer).setIcon(
                                        new ImageIcon((Image) image));
                                labelList.get(pointer).setText(book.getmCode());
                                pointer++;
                                point = pointer;
                            } catch (IOException ex) {
                                Logger.getLogger(CatalogForm.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                        System.out.println("Count " + count);
                    }
                }
            }
        }
    }//GEN-LAST:event_lblLeftMouseClicked

    private void lblRightMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRightMouseClicked
        int end = point;
        int start = bookList.size() - point;
        int pointer =0;
        int count = 0;
       for (Book book : bookList) {
            if(count > start && count < end) {     
                        if (pointer <= 10) {

                            try {
                                byte[] imageBytes = book.getImage();
                                BufferedImage currentImage = createCover(imageBytes);
                                BufferedImage image = resizeImage(currentImage);
                                labelList.get(pointer).setIcon(
                                        new ImageIcon((Image) image));
                                labelList.get(pointer).setText(book.getmCode());
                                pointer++;
                                point = pointer;
                            } catch (IOException ex) {
                                Logger.getLogger(CatalogForm.class.getName()).log(Level.SEVERE, null, ex);
                            }
                       
                    }
            }else{
                count++;
            }
       }
    }//GEN-LAST:event_lblRightMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info
                    : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CatalogForm.class.getName())
                    .log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CatalogForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel2;
    private javax.swing.JLabel lblBackground;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblImg1;
    private javax.swing.JLabel lblImg10;
    private javax.swing.JLabel lblImg2;
    private javax.swing.JLabel lblImg3;
    private javax.swing.JLabel lblImg4;
    private javax.swing.JLabel lblImg5;
    private javax.swing.JLabel lblImg6;
    private javax.swing.JLabel lblImg7;
    private javax.swing.JLabel lblImg8;
    private javax.swing.JLabel lblImg9;
    private javax.swing.JLabel lblLeft;
    private javax.swing.JLabel lblRight;
    private javax.swing.JList listSubject;
    private javax.swing.JList listType;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtBookName;
    // End of variables declaration//GEN-END:variables

    /**
     * Fills List from subject names
     */
    private void getAllSubjects() {
        try {
            SubjectService subjectController = ServerConnector.
                    getServerConnector().getSubjectService();
            ArrayList<Subject> allSubject = subjectController.getAll();
            ArrayList<String> nameList = new ArrayList<>();

            listSubject.removeAll();
            for (Subject subject : allSubject) {
                nameList.add(subject.getSubjectName());
            }
            Collections.sort(nameList);
            listSubject.setListData(nameList.toArray());
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected", "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }

    }

    private BufferedImage createCover(byte[] byteImage) throws IOException {
        return new TransportableImage().createBufferedImage(byteImage);
    }

    private ArrayList<Book> getBookListForGivenType(String subject, String type)
            throws IOException, RemoteException, NotBoundException {
        ArrayList<Book> bookList
                = new ControllerFactoryImpl().getBookController().
                searchBookByTypeAndSubject(subject, type);
        return bookList;
    }

    private void addBookListToLabels(ArrayList<Book> bookList)
            throws IOException {
        this.bookList = bookList;

        labelList.add(lblImg1);
        labelList.add(lblImg2);
        labelList.add(lblImg3);
        labelList.add(lblImg4);
        labelList.add(lblImg5);
        labelList.add(lblImg6);
        labelList.add(lblImg7);
        labelList.add(lblImg8);
        labelList.add(lblImg9);
        labelList.add(lblImg10);

        for (JLabel label : labelList) {
            label.setText("..");
            label.setIcon(null);
        }
        Collections.sort(bookList);
        lblCount.setText(bookList.size() + " Result Found..");
        int pointer = 0;
        if ((bookList.size() > 0) && (bookList.size() <= 10)) {
            lblLeft.setEnabled(false);
            lblRight.setEnabled(false);
            for (Book book : bookList) {
                byte[] imageBytes = book.getImage();
                BufferedImage currentImage = createCover(imageBytes);
                BufferedImage image = resizeImage(currentImage);
                labelList.get(pointer).setIcon(
                        new ImageIcon((Image) image));
                labelList.get(pointer).setText(book.getmCode());
                pointer++;

            }
        } else {
            lblLeft.setEnabled(true);
            for (Book book : bookList) {
                if (pointer < 10) {
                    byte[] imageBytes = book.getImage();
                    BufferedImage currentImage = createCover(imageBytes);
                    BufferedImage image = resizeImage(currentImage);
                    labelList.get(pointer).setIcon(
                            new ImageIcon((Image) image));
                    labelList.get(pointer).setText(book.getmCode());
                    pointer++;
                    System.out.println("Pointer " + pointer);
                    point = pointer;
                }
            }
        }
    }

    private ArrayList<Book> getBookListForAllTypes(String subject)
            throws IOException, RemoteException,
            MalformedURLException, NotBoundException {

        ArrayList<Book> bookList
                = new ControllerFactoryImpl().getBookController().
                searchBookBySubject(subject);
        return bookList;
    }

    private void preview(JLabel label) {
        String mCode = label.getText();
        if (!mCode.equals("..")) {
            String userName = null;

            previewForm = new PreviewForm(mCode, userName, this);

            previewForm.setVisible(true);
            this.dispose();
        }
    }

    private ArrayList<Book> searchByName(String name)
            throws IOException, RemoteException,
            MalformedURLException, NotBoundException {

        ArrayList<Book> bookList
                = new ControllerFactoryImpl().getBookController().
                searchBookByName(name);
        return bookList;
    }

    private ArrayList<Book> searchByAuthor(String author)
            throws IOException, RemoteException,
            MalformedURLException, NotBoundException {

        ArrayList<Book> bookList
                = new ControllerFactoryImpl().getBookController().
                searchBookByAuthor(author);
        return bookList;
    }

    private BufferedImage resizeImage(BufferedImage currentImage) {
        BufferedImage resized
                = new BufferedImage(130, 138, currentImage.getType());

        Graphics2D g = resized.createGraphics();
        g.setRenderingHint(RenderingHints.KEY_INTERPOLATION,
                RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g.drawImage(currentImage, 0, 0, 130, 138, 0, 0, currentImage.getWidth(),
                currentImage.getHeight(), null);
        g.dispose();
        return resized;
    }

    public void setMessage(String message) {
        new Thread() {
            @Override
            public void run() {
                try {
                    Pop p = new Pop(message);
                    Thread.sleep(5000);
                    p.dispose();
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        ;
    }

    .start();
    }
    private void setFullScreen() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize.width, screenSize.height);

        Component component = this;
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                posX = e.getX();
                posY = e.getY();
            }
        });

        component.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent evt) {
                Rectangle rectangle = getBounds();
                setBounds(evt.getXOnScreen() - posX, evt.getYOnScreen() - posY,
                        rectangle.width, rectangle.height);
            }
        });
    }

    /**
     * Sets current time.
     */
    private void getTime() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date curDate = new Date();
                    SimpleDateFormat dateFormat
                            = new SimpleDateFormat("HH:mm aa");
                    String currentTime = dateFormat.format(curDate);

                    lblClock.setText(currentTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(
                                CatalogForm.this, "Database Error...");
                    }
                }
            }
        }).start();
    }

    private void deleteTemp() {
        File file = new File("./src/tempfiles/");
        String[] fileNames = file.list();
        for (String names : fileNames) {
            System.out.println(names);
            if (!"image".equals(names)) {
                File f = new File("./src/tempfiles/" + names);
                System.out.println(f);
                f.delete();
            }
        }
    }
}
