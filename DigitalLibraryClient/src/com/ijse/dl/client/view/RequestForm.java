/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.dl.client.view;

import com.ijse.dl.client.connector.ServerConnector;
import com.ijse.dl.client.controllerfactoryimpl.ControllerFactoryImpl;
import com.ijse.dl.client.view.util.Validation;
import com.ijse.dl.common.dto.Book;
import com.ijse.dl.common.dto.Request;
import com.ijse.dl.common.service.SubjectService;
import com.ijse.dl.common.dto.Subject;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Rectangle;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Randula
 */
public class RequestForm extends javax.swing.JFrame {

    /**
     * Creates new form RequestForm
     */
    private HomeFrame homeFrame;
    private String userName;
    private int posX;
    private int posY;
    private Icon icon = new ImageIcon(getClass().getResource(
            "/com/ijse/dl/client/view/images/block.png"));

    public RequestForm() {
        initComponents();
         setFullScreen();
    }

    RequestForm(HomeFrame homeFrame) {
        initComponents();
        setFullScreen();
        getTime();
        this.homeFrame = homeFrame;
        getAllSubjects();
        this.userName = homeFrame.getUserName();
        txtMyName.setText(userName);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblName1 = new javax.swing.JLabel();
        lblMyName = new javax.swing.JLabel();
        txtMyName = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblDescription1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescription = new javax.swing.JTextArea();
        lblAuthor1 = new javax.swing.JLabel();
        txtAuthor = new javax.swing.JTextField();
        lblSubject1 = new javax.swing.JLabel();
        lblMediaType1 = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        btnHome = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listSubject = new javax.swing.JList();
        jXTitledPanel2 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listType = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        cmbType = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        lblClose = new javax.swing.JLabel();
        lblClock = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblBackground1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblName1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblName1.setForeground(new java.awt.Color(255, 255, 255));
        lblName1.setText("Book Name");
        getContentPane().add(lblName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 210, 90, 30));

        lblMyName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblMyName.setForeground(new java.awt.Color(255, 255, 255));
        lblMyName.setText("Your Name");
        getContentPane().add(lblMyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 170, 90, 30));

        txtMyName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtMyName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        txtMyName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMyNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtMyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 170, 270, 30));

        txtName.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 210, 270, 30));

        lblDescription1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblDescription1.setForeground(new java.awt.Color(255, 255, 255));
        lblDescription1.setText("Description");
        getContentPane().add(lblDescription1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 250, 90, 80));

        txtDescription.setColumns(20);
        txtDescription.setRows(5);
        txtDescription.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescriptionKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(txtDescription);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 250, 270, 90));

        lblAuthor1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblAuthor1.setForeground(new java.awt.Color(255, 255, 255));
        lblAuthor1.setText("Author");
        getContentPane().add(lblAuthor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 350, 90, 30));

        txtAuthor.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtAuthor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        txtAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAuthorKeyReleased(evt);
            }
        });
        getContentPane().add(txtAuthor, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 350, 270, 30));

        lblSubject1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblSubject1.setForeground(new java.awt.Color(255, 255, 255));
        lblSubject1.setText("Subject");
        getContentPane().add(lblSubject1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 390, 90, 30));

        lblMediaType1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        lblMediaType1.setForeground(new java.awt.Color(255, 255, 255));
        lblMediaType1.setText("Media Type");
        getContentPane().add(lblMediaType1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 430, 90, 30));

        txtSubject.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        txtSubject.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 153)));
        txtSubject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSubjectKeyReleased(evt);
            }
        });
        getContentPane().add(txtSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 390, 270, 30));

        btnHome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/home1.png"))); // NOI18N
        btnHome.setText("Back");
        btnHome.setContentAreaFilled(false);
        btnHome.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnHome.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHomeMouseExited(evt);
            }
        });
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        getContentPane().add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 470, 110, 90));

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSave.setForeground(new java.awt.Color(255, 255, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/save1.png"))); // NOI18N
        btnSave.setText("Submit");
        btnSave.setContentAreaFilled(false);
        btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSaveMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSaveMouseExited(evt);
            }
        });
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        getContentPane().add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 470, 110, 90));

        jXTitledPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jXTitledPanel1.setTitle("Subjects");
        jXTitledPanel1.setTitleFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jXTitledPanel1.setTitleForeground(new java.awt.Color(255, 255, 255));

        listSubject.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        listSubject.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Java", "Database", "Science", "History", "Environment", "English", "Stories", " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listSubject.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listSubject.setSelectionBackground(new java.awt.Color(153, 204, 255));
        listSubject.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane3.setViewportView(listSubject);

        javax.swing.GroupLayout jXTitledPanel1Layout = new javax.swing.GroupLayout(jXTitledPanel1.getContentContainer());
        jXTitledPanel1.getContentContainer().setLayout(jXTitledPanel1Layout);
        jXTitledPanel1Layout.setHorizontalGroup(
            jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 216, Short.MAX_VALUE)
            .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jXTitledPanel1Layout.setVerticalGroup(
            jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 170, Short.MAX_VALUE)
            .addGroup(jXTitledPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jXTitledPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(13, Short.MAX_VALUE)))
        );

        getContentPane().add(jXTitledPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 220, 200));

        jXTitledPanel2.setForeground(new java.awt.Color(255, 255, 255));
        jXTitledPanel2.setTitle("Media Type");
        jXTitledPanel2.setTitleFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jXTitledPanel2.setTitleForeground(new java.awt.Color(255, 255, 255));

        listType.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        listType.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "All", "PDF", "Image", "Audio", "Video", "" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listType.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        listType.setSelectionBackground(new java.awt.Color(153, 204, 255));
        listType.setSelectionForeground(new java.awt.Color(0, 0, 0));
        listType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listTypeMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(listType);

        javax.swing.GroupLayout jXTitledPanel2Layout = new javax.swing.GroupLayout(jXTitledPanel2.getContentContainer());
        jXTitledPanel2.getContentContainer().setLayout(jXTitledPanel2Layout);
        jXTitledPanel2Layout.setHorizontalGroup(
            jXTitledPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jXTitledPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 196, Short.MAX_VALUE)
                .addContainerGap())
        );
        jXTitledPanel2Layout.setVerticalGroup(
            jXTitledPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jXTitledPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(jXTitledPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 220, 170));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "mCode", "Name", "Author", "Subject", "Media Type", "Language"
            }
        ));
        table.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(table);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 170, 530, 390));

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/refresh1.png"))); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setContentAreaFilled(false);
        btnSearch.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSearch.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSearchMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSearchMouseExited(evt);
            }
        });
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        getContentPane().add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 560, 110, 90));

        cmbType.setEditable(true);
        cmbType.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Any", "Audio", "Video", "PDF", "Image" }));
        cmbType.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 153), 1, true));
        cmbType.setOpaque(false);
        cmbType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTypeItemStateChanged(evt);
            }
        });
        getContentPane().add(cmbType, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 430, 270, 30));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1370, 10));

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/minimize.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1270, 0, 40, 50));

        lblClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/close2.png"))); // NOI18N
        lblClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblCloseMouseClicked(evt);
            }
        });
        getContentPane().add(lblClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, 40, 50));

        lblClock.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblClock.setForeground(new java.awt.Color(255, 255, 255));
        lblClock.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblClock.setText("Time");
        getContentPane().add(lblClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 70, 100, 20));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("MAZE");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 110, 50));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Suggesions");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 90, 20));

        lblBackground1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblBackground1.setForeground(new java.awt.Color(255, 255, 255));
        lblBackground1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ijse/dl/client/view/images/back.jpg"))); // NOI18N
        lblBackground1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblBackground1.setMaximumSize(new java.awt.Dimension(1368, 766));
        lblBackground1.setMinimumSize(new java.awt.Dimension(1368, 766));
        lblBackground1.setPreferredSize(new java.awt.Dimension(1368, 766));
        getContentPane().add(lblBackground1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -490, 1690, 1320));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseEntered
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/com/ijse/dl/client/view/images/home2.png")));
    }//GEN-LAST:event_btnHomeMouseEntered

    private void btnHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseExited
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/com/ijse/dl/client/view/images/home1.png")));
    }//GEN-LAST:event_btnHomeMouseExited

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnSaveMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseEntered
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/com/ijse/dl/client/view/images/save2.png")));
    }//GEN-LAST:event_btnSaveMouseEntered

    private void btnSaveMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseExited
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/com/ijse/dl/client/view/images/save1.png")));
    }//GEN-LAST:event_btnSaveMouseExited

    private void btnSearchMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseEntered
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/com/ijse/dl/client/view/images/refresh2.png")));
    }//GEN-LAST:event_btnSearchMouseEntered

    private void btnSearchMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseExited
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/com/ijse/dl/client/view/images/refresh1.png")));
    }//GEN-LAST:event_btnSearchMouseExited

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (!(listSubject.isSelectionEmpty() && listType.isSelectionEmpty())) {
            fillTable();
        } else {
            JOptionPane.showMessageDialog(this,
                    "Please Select a Subject...", "Warning..",
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cmbTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTypeItemStateChanged

    }//GEN-LAST:event_cmbTypeItemStateChanged

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        saveRequest();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_jLabel6MouseClicked

    private void lblCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblCloseMouseClicked
        homeFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_lblCloseMouseClicked

    private void listTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listTypeMouseClicked
        if (listSubject.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Please Select a Subject...", "Warning..",
                    JOptionPane.WARNING_MESSAGE);
            if (listSubject.getVisibleRowCount() != 0) {
                listSubject.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_listTypeMouseClicked

    private void txtMyNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMyNameKeyReleased
       Validation.removeSemiColen(txtMyName, evt);
    }//GEN-LAST:event_txtMyNameKeyReleased

    private void txtDescriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescriptionKeyReleased
       Validation.removeSemiColen(txtDescription, evt);
    }//GEN-LAST:event_txtDescriptionKeyReleased

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        Validation.removeSemiColen(txtName, evt);
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtAuthorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAuthorKeyReleased
          Validation.removeSemiColen(txtAuthor, evt);
    }//GEN-LAST:event_txtAuthorKeyReleased

    private void txtSubjectKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubjectKeyReleased
        Validation.removeSemiColen(txtSubject, evt);
    }//GEN-LAST:event_txtSubjectKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel2;
    private javax.swing.JLabel lblAuthor1;
    private javax.swing.JLabel lblBackground1;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblClose;
    private javax.swing.JLabel lblDescription1;
    private javax.swing.JLabel lblMediaType1;
    private javax.swing.JLabel lblMyName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblSubject1;
    private javax.swing.JList listSubject;
    private javax.swing.JList listType;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtMyName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSubject;
    // End of variables declaration//GEN-END:variables
    /**
     * Fills List from subject names
     */
    private void getAllSubjects() {
        try {
            SubjectService subjectController = ServerConnector.
                    getServerConnector().getSubjectService();
            ArrayList<Subject> allSubject = subjectController.getAll();
            ArrayList<String> nameList = new ArrayList<>();

            listSubject.removeAll();
            for (Subject subject : allSubject) {
                nameList.add(subject.getSubjectName());
            }
            Collections.sort(nameList);
            listSubject.setListData(nameList.toArray());
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected",
                    "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }

    }

    private void fillTable() {
        try {
            String subject = (String) listSubject.getSelectedValue();
            String type = (String) listType.getSelectedValue();

            ArrayList<Book> bookList = null;

            if ("All".equalsIgnoreCase(type)) {
                bookList = getBookListForAllTypes(subject);
            } else {
                bookList = getBookListForGivenType(subject, type);
            }
            setTable(bookList);
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected",
                    "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    private ArrayList<Book> getBookListForAllTypes(String subject)
            throws IOException, RemoteException,
            MalformedURLException, NotBoundException {

        ArrayList<Book> bookList
                = new ControllerFactoryImpl().getBookController().
                searchBookBySubject(subject);
        return bookList;
    }

    private ArrayList<Book> getBookListForGivenType(String subject, String type)
            throws IOException, RemoteException, NotBoundException {
        ArrayList<Book> bookList
                = new ControllerFactoryImpl().getBookController().
                searchBookByTypeAndSubject(subject, type);
        return bookList;
    }

    private void setTable(ArrayList<Book> allBooks) throws
            IOException, RemoteException,
            MalformedURLException, NotBoundException {

        DefaultTableModel dtm = (DefaultTableModel) table.getModel();
        dtm.setRowCount(0);

        for (Book book : allBooks) {
            Object[] rows = {book.getmCode(), book.getName(),
                book.getAuthor(), book.getSubject(),
                book.getType(), book.getLanguage()};
            dtm.addRow(rows);
        }
        setTableSoter();
    }

    private void setTableSoter() {
        TableRowSorter<TableModel> sorter
                = new TableRowSorter<>(table.getModel());
        table.setRowSorter(sorter);
        List<RowSorter.SortKey> sortKeys
                = new ArrayList<>(table.getRowCount());

        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));
        sortKeys.add(new RowSorter.SortKey(1, SortOrder.ASCENDING));

        sorter.setSortKeys(sortKeys);
    }

    private void saveRequest() {
        try {
            String member = txtMyName.getText();
            String bookName = null;
            if (txtName.getText().isEmpty()) {
                bookName = "Not Specified";
            } else {
                bookName = txtName.getText();
            }

            String description = null;
            if (txtDescription.getText().isEmpty()) {
                description = "Not Specified";
            } else {
                description = txtDescription.getText();
            }
            String author = null;
            if (txtAuthor.getText().isEmpty()) {
                author = "Not Specified";
            } else {
                author = txtAuthor.getText();
            }
            String subject = txtSubject.getText();
            String type = (String) cmbType.getSelectedItem();

            Request request = new Request("0", member, bookName,
                    description, author, subject, type);

            boolean isAdded
                    = new ControllerFactoryImpl().getRequestController()
                    .requestBook(request);
            if (isAdded) {
                JOptionPane.showMessageDialog(this,
                        "Thanks for Your Suggesions...", "Message", 1);
                txtName.setText(null);
                txtAuthor.setText(null);
                txtDescription.setText(null);
                txtSubject.setText(null);
                cmbType.setSelectedIndex(0);
            } else {
                JOptionPane.showMessageDialog(this,
                        "Try Again...", "Message", 1);
            }
        } catch (IOException | NotBoundException ex) {
            JOptionPane.showMessageDialog(null, "Server Disconnected",
                    "Oops!",
                    JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    private void setFullScreen() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(screenSize.width, screenSize.height);

        Component component = this;
        component.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                posX = e.getX();
                posY = e.getY();
            }
        });

        component.addMouseMotionListener(new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent evt) {
                Rectangle rectangle = getBounds();
                setBounds(evt.getXOnScreen() - posX, evt.getYOnScreen() - posY,
                        rectangle.width, rectangle.height);
            }
        });
    }

    /**
     * Sets current time.
     */
    private void getTime() {
        new Thread(new Runnable() {
            @Override
            public void run() {
                while (true) {
                    Date curDate = new Date();
                    SimpleDateFormat dateFormat
                            = new SimpleDateFormat("HH:mm aa");
                    String currentTime = dateFormat.format(curDate);

                    lblClock.setText(currentTime);
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        JOptionPane.showMessageDialog(
                                RequestForm.this, "Database Error...");
                    }
                }
            }
        }).start();
    }
}
